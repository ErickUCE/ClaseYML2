name: Deploy to EC2

on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - main

jobs:
  deploy-qa:
    if: github.ref == 'refs/heads/test'
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Hacer checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v2

      # Paso 2: Configurar la clave SSH para conectar con la instancia EC2 de QA
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 3.80.109.76 >> ~/.ssh/known_hosts

      # Paso 3: Desplegar en la instancia EC2 de QA
      - name: Deploy to QA Instance
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@3.80.109.76 << 'EOF'
            cd /home/ec2-user/ClaseYML2 || git clone https://github.com/ErickUCE/ClaseYML2.git
            cd ClaseYML2
            git pull origin test  # Actualizar los archivos del repositorio en QA
            sudo cp index.html /var/www/html/
            sudo systemctl restart nginx
          EOF

  deploy-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Hacer checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v2

      # Paso 2: Configurar la clave SSH para conectar con la instancia EC2 de producción
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 54.165.123.67 >> ~/.ssh/known_hosts

      # Paso 3: Desplegar en la instancia EC2 de producción
      - name: Deploy to Production Instance
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@54.165.123.67 << 'EOF'
            cd /home/ec2-user/ClaseYML2 || git clone https://github.com/ErickUCE/ClaseYML2.git
            cd ClaseYML2
            git pull origin main  # Actualizar los archivos del repositorio en Producción
            sudo cp index.html /var/www/html/
            sudo systemctl restart nginx
          EOF

  create-pr:
    needs: deploy-qa
    if: github.ref == 'refs/heads/test'
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Configurar el checkout
      - name: Checkout repository
        uses: actions/checkout@v2

      # Paso 2: Crear el pull request de QA a Producción
      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: test
          destination_branch: main
          pr_title: "Promote changes from QA to Production"
          pr_body: "Este PR promueve los cambios de QA a Producción."
          token: ${{ secrets.GITHUB_TOKEN }}
